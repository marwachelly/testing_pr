name: Testing PrestaShop pull requests
on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: Pull request Id
        required: true
      base_branch:
        description: Base branch to rebase the PR
        required: true
        default: 'develop'
      should_rebase:
        type: boolean
        required: true
        description: True to rebase the PR
      php_version:
        type: choice
        description: PHP version
        required: true
        options:
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
        default: '7.4'
      node_version:
        type: choice
        description: Node version
        required: true
        options:
          - '14'
          - '16'
        default: '14'

jobs:
  testing-pr:
    runs-on: ubuntu-latest
    name: test
    strategy:
      fail-fast: false
      matrix:
        TEST_COMMAND:
          - 'sanity'
          - 'functional:BO:login'
          - 'functional:BO:orders'
          - 'functional:BO:catalog'
          - 'functional:BO:customer'
          - 'functional:BO:customer-service'
          - 'functional:BO:modules'
          - 'functional:BO:design'
          - 'functional:BO:shipping'
          - 'functional:BO:payment'
          - 'functional:BO:international'
          - 'functional:BO:shop-parameters'
          - 'functional:BO:advanced-parameters'
          - 'functional:BO:header'
          - 'functional:FO'
          - 'regression'

    env:
      PR_NUMBER: ${{ github.event.inputs.pr_number }}
      BASE_BRANCH: ${{ github.event.inputs.base_branch }}
      PHP_VERSION: ${{ github.event.inputs.php_version }}
      NODE_VERSION: ${{ github.event.inputs.node_version }}
      TO_REBASE: ${{ github.event.inputs.should_rebase }}
      PS_DIR: 'my_prestashop'

    steps:
      - uses: actions/checkout@v2
        with:
          path: main

      - uses: actions/checkout@v2
        name: Checkout PrestaShop repository
        with:
          fetch-depth: 0
          repository: PrestaShop/PrestaShop
          path: ${{ env.PS_DIR }}

      - name: Config git
        run: |
          git config --local user.email "$(git log --format='%ae' HEAD^!)"
          git config --local user.name "$(git log --format='%an' HEAD^!)"
        working-directory: ${{ env.PS_DIR }}

      - name: Get pull request
        working-directory: ${{ env.PS_DIR }}
        run: |
          git fetch origin pull/${{ env.PR_NUMBER }}/head:pr${{ env.PR_NUMBER }}
          git checkout pr${{ env.PR_NUMBER }}

      - name: Rebase the PR
        working-directory: ${{ env.PS_DIR }}
        if: ${{ env.TO_REBASE == 'true' }}
        run: |
          git fetch origin ${{ env.BASE_BRANCH }}:${{ env.BASE_BRANCH }}
          git rebase origin/${{ env.BASE_BRANCH }}

      - name: Setup Apache
        run: sudo bash scripts/apache/setup.sh ${{ github.workspace }} ${{ env.PS_DIR }} ${{ env.PHP_VERSION }}
        working-directory: main

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl, zip, iconv, simplexml, pdo, mysql

      - name: Setup mailutils
        run: sudo apt-get install -y apt-utils mailutils

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '5.7'
          mysql database: 'prestashop'
          mysql root password: 'password'

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup NPM
        run: npm install -g npm@7

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
            
      - name: Cache node Directory
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('admin-dev/**/package-lock.json', 'tests/**/package-lock.json', 'themes/**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: PrestaShop Configuration
        run: |
          cp ./main/scripts/php/parameters.yml ./${{ env.PS_DIR }}/app/config/parameters.yml
          cp ./main/scripts/php/defines_custom.inc.php ./${{ env.PS_DIR }}/config/defines_custom.inc.php

      - name: Composer install and build assets
        run: make
        working-directory: ${{ env.PS_DIR }}

      - run: |
          sudo chmod 777 -R ${{ github.workspace }}
          sudo mkdir -p /var/lib/php/sessions
          sudo chown www-data:www-data /var/lib/php/sessions
          sudo service apache2 restart

      - name: Install PrestaShop
        if: matrix.TEST_COMMAND != 'sanity'
        run: |
          php install-dev/index_cli.php \
          --language=en --country=fr --domain=localhost \
          --db_server=127.0.0.1 --db_password=password --db_name=prestashop --db_create=1 --prefix=tst_ \
          --firstname="Marc" --lastname="Beier" --email=demo@prestashop.com --password="Correct Horse Battery Staple"
        working-directory: ${{ env.PS_DIR }}

      - run: |
          sudo chmod 777 -R ${{ github.workspace }}
          sudo mkdir -p /var/lib/php/sessions
          sudo chown www-data:www-data /var/lib/php/sessions
          sudo service apache2 restart

      - name: Install tests dependencies
        run: npm install
        working-directory: '${{ env.PS_DIR }}/tests/UI'

      - name: Run tests
        id: my_test
        run: npm run test:${{ matrix.TEST_COMMAND }}
        working-directory: '${{ env.PS_DIR }}/tests/UI'
        env:
          URL_FO: http://localhost/
          DB_NAME: prestashop
          DB_PASSWD: password
          HEADLESS: true
          TAKE_SCREENSHOT_AFTER_FAIL: true

      - run: echo "MY_COMMAND=$( echo -e '${{ matrix.TEST_COMMAND }}' | tr  ':' '-'  )" >> $GITHUB_ENV
        if: ${{ always() }}

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: screenshots-${{ env.MY_COMMAND }}
          path: '${{ env.PS_DIR }}/tests/UI/screenshots/'
